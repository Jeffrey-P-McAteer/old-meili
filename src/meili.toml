
# This may be used to overwrite your hostname for friendly identification
# reasons. The hostname is never used as a crypto identity and
# should not be used except to identify between 2 strangers.
# When the value has a length < 4 we replace it with the system hostname.
hostname = ""

# How long should the network thread sleep between checking
# sockets for packets? High values will burn fewer CPU cycles
# but will handle fewer total packets per second, while low
# values will use 100% of a CPU and handle as many packets as possible
# per second.
# Value is in Nanoseconds (1000000000 = 1s, 1000000 = 1ms),
# default is 4ms (4000000ns)
poll_delay_ns = 4000000

# This causes meili to autodiscover a router
# and ask for any public UDP port to be forwarded.
# We first ask for pref_upnp_public_port specifically, and
# if that fails we ask for a random public port.
# upnp_local_port must point to a local port opened by
# a udp_sockets_to_listen_on entry.
attempt_upnp_port_forward = true
upnp_gw_timeout_ms = 5000
upnp_pref_public_port = 1337
upnp_local_port = 1337

[[udp_sockets_to_listen_on]]
name = "Default meili local address"
socket = "0.0.0.0:1337"

[[udp_sockets_to_listen_on]]
name = "Default meili LAN multicast address"
socket = "239.10.10.10:1338"


# When scanning ip address ranges this number is used
# to seed the random walk which is performed over the
# range. By re-using the seed we can perform a random
# scan which is resumable. If this value is not set in meili.toml
# a 64-bit hash of the hostname is used.
ip_range_scan_seed = 12345

# Users may specify as many [[ip_ranges_to_scan]]
# items as they wany (including none), the name
# field is optional.
# the cidr field is required and specifies the network to scan.
# The max_ips_per_second field limits how many IPs are
# scanned per second, if omitted it defaults to 100.
# The rescan_age field specifies when to re-scan an IP address,
# defaulting to 24 hours.
[[ip_ranges_to_scan]]
name = "Optional Name - ipv4 local multicast block"
cidr = "239.0.0.0/8"
max_ips_per_second = 150
rescan_age = "36h"

[[ip_ranges_to_scan]]
name = "some ipv6 link local range"
cidr = "fe80:1::1/64"

